---
- name: Retrieve all users from /etc/passwd and their last login dates
  hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Slurp the content of /etc/passwd
      ansible.builtin.slurp:
        src: /etc/passwd
      register: passwd_content
      changed_when: false

    - name: Decode the base64 content of /etc/passwd
      ansible.builtin.set_fact:
        decoded_passwd: "{{ passwd_content['content'] | b64decode }}"

    - name: Extract all usernames from decoded /etc/passwd content
      ansible.builtin.set_fact:
        all_system_users: >-
          {{ decoded_passwd.splitlines() | map('regex_replace', '^([^:]+):.*', '\\1') | list }}

    - name: Get all user last login info using lastlog
      ansible.builtin.shell: lastlog | tail -n +2
      register: lastlog_output
      changed_when: false

    - name: Parse lastlog output into a dictionary for easy lookup
      ansible.builtin.set_fact:
        last_logins_dict: {}

    - name: Populate last_logins_dict with user and last login time
      ansible.builtin.set_fact:
        last_logins_dict: >-
          {{ last_logins_dict | combine({
            item.split()[0]: (item.split(' ', 1)[1] | regex_replace('^\\s+', '') | regex_replace('\\s{2,}.*$', '')) if '**Never logged in**' not in item else 'Never logged in'
          }) }}
      loop: "{{ lastlog_output.stdout_lines }}"
      when: item | length > 0

    - name: Combine /etc/passwd users with their last login dates
      ansible.builtin.set_fact:
        host_user_login_summary: []

    - name: Iterate through all system users and find their last login
      ansible.builtin.set_fact:
        host_user_login_summary: >-
          {{ host_user_login_summary + [{
            'user': user,
            'last_login': last_logins_dict.get(user, 'No lastlog entry found')
          }] }}
      loop: "{{ all_system_users }}"
      loop_control:
        loop_var: user

  post_tasks:
    - name: Aggregate all user login data from all hosts
      ansible.builtin.set_fact:
        final_all_users_login_summary: []
      run_once: true

